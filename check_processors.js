const { DocumentProcessorServiceClient } = require('@google-cloud/documentai');

async function checkProcessors() {
    const client = new DocumentProcessorServiceClient({
        keyFilename: './credentials/google-service-account.json'
    });

    try {
        const parent = 'projects/notai-doc-ocr/locations/us';
        console.log('üîç Sprawdzanie dostƒôpu do Document AI...');
        console.log(`üìç Projekt: ${parent}`);
        
        const [processors] = await client.listProcessors({ parent });
        
        console.log('‚úÖ Dostƒôp do Document AI OK');
        console.log(`üìã Znaleziono ${processors.length} procesor√≥w:`);
        
        processors.forEach(p => {
            console.log(`  - ${p.displayName} (${p.type})`);
            console.log(`    ID: ${p.name.split('/').pop()}`);
            console.log(`    Stan: ${p.state}`);
            console.log('');
        });
        
        // Sprawd≈∫ czy mamy ju≈º Custom Classifier
        const classifier = processors.find(p => p.type === 'CUSTOM_CLASSIFICATION_PROCESSOR');
        if (classifier) {
            console.log('üéØ Znaleziono Custom Classifier:');
            console.log(`   Nazwa: ${classifier.displayName}`);
            console.log(`   ID: ${classifier.name.split('/').pop()}`);
        } else {
            console.log('‚ÑπÔ∏è  Brak Custom Classifier - trzeba utworzyƒá przez Console');
        }
        
    } catch (error) {
        console.error('‚ùå B≈ÇƒÖd dostƒôpu do Document AI:', error.message);
        
        if (error.message.includes('PERMISSION_DENIED')) {
            console.log('\nüí° ROZWIƒÑZANIE:');
            console.log('1. Przejd≈∫ do Google Cloud Console');
            console.log('2. IAM & Admin ‚Üí Service Accounts');
            console.log('3. Znajd≈∫: notai-doc-service@notai-doc-ocr.iam.gserviceaccount.com');
            console.log('4. Dodaj rolƒô: Document AI Editor');
        }
    }
}

checkProcessors(); 